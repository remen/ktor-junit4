buildscript {
    ext.kotlin_version = '1.2.21'
    ext.junit_platform_plugin_version = '1.0.3'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // Although set up in gradle/spek.gradle, this dependency has to be here since it's in the build script section
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit_platform_plugin_version"
    }
}
apply plugin: "kotlin"
compileKotlin { kotlinOptions { jvmTarget = "1.8" } }
compileTestKotlin { kotlinOptions { jvmTarget = "1.8" } }
kotlin {
    experimental {
        coroutines 'enable'
    }
}

apply from: 'gradle/docker.gradle'
apply from: 'gradle/spek.gradle'

repositories {
    mavenCentral()
    maven { url  "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

ext.ktor_version = '0.9.1'
ext.jackson_version = '2.9.4'
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Use https://ktor.io as a web server
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"

    // HTTP Client
    compile "org.apache.httpcomponents:fluent-hc:4.5.5"

    // Jackson for json handling
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"

    // Use logback + json encoder for logging
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile 'net.logstash.logback:logstash-logback-encoder:4.11'

    // Test dependencies
    testCompile "org.assertj:assertj-core:3.9.0"
}
